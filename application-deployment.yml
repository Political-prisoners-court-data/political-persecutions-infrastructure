---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rfm-scraper-deployment
  labels:
    app: rfm-scraper-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rfm-scraper-deployment
  template:
    metadata:
      labels:
        app: rfm-scraper-deployment
    spec:
      containers:
        - name: pproxy
          image: mosajjal/pproxy:latest-uv
          env:
            - name: REMOTE_PROXY_URI
              valueFrom:
                secretKeyRef:
                  name: pproxy-secret
                  key: remote-uri
          args:
            - -l
            - http://localhost:4321
            - -r
            - "$(REMOTE_PROXY_URI)"
          resources:
            limits:
              cpu: "200m"
              memory: "128Mi"
            requests:
              cpu: "100m"
              memory: "64Mi"
        - name: rfm-scraper
          image: aleksandrivanov22/rfm-scraper-script:latest
          env:
            - name: HTTPS_PROXY
              value: http://localhost:4321
            - name: HTTP_PROXY
              value: http://localhost:4321
            - name: PYTHON_ENV
              value: prod
            - name: LOG_LEVEL
              value: INFO
            - name: MONGO_HOST
              valueFrom:
                secretKeyRef:
                  name: mongo-scraper-secret
                  key: host
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-scraper-secret
                  key: username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-scraper-secret
                  key: password
          resources:
            limits:
              cpu: "300m"
              memory: "256Mi"
            requests:
              cpu: "150m"
              memory: "128Mi"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  labels:
    app: web-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-deployment
  template:
    metadata:
      labels:
        app: web-deployment
    spec:
      containers:
        - env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: mongo-web-secret
                  key: DATABASE_URL
          image: persecutions-web
          name: persecutions-web
          ports:
            - containerPort: 3000
              protocol: TCP
          workingDir: /app
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../political-persecutions-web/docker-build/compose.yaml
    kompose.version: 1.35.0 ()
  labels:
    io.kompose.service: app
  name: app
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: app
